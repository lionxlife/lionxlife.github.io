{"version":3,"sources":["webpack:///./src/components/covers/shared/nextButton.jsx","webpack:///./src/components/shared/postYearReadTime.jsx","webpack:///./src/helpers/convertWordsToTime.js","webpack:///./src/components/covers/shared/loading.jsx","webpack:///./src/components/covers/home/imageCover.jsx","webpack:///./src/components/covers/home/heading/useHeadingAnimation.js","webpack:///./src/helpers/arrayShuffle.js","webpack:///./src/components/covers/home/heading/index.jsx","webpack:///./src/components/covers/home/heading/generateInitialWord.js","webpack:///./src/components/covers/home/index.jsx","webpack:///./src/components/bodies/home/postFeedHeading.jsx","webpack:///./src/components/bodies/home/postFeed/mainPostBlock.jsx","webpack:///./src/components/bodies/home/postFeed/postBlock.jsx","webpack:///./src/components/bodies/home/postFeed/postPlaceHolderBlock.jsx","webpack:///./src/components/bodies/home/postFeed/index.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/covers/shared/bottom.jsx","webpack:///./src/components/covers/shared/loadCover.js"],"names":["scrollToTargetAdjusted","offsetPosition","document","getElementById","CONTENT_BOOKMARK_ID","getBoundingClientRect","top","window","scrollTo","behavior","className","data-target","id","onClick","noOfWords","postYear","wordCount","style","display","alignItems","fontSize","margin","class","Math","round","setCoverLoading","useCover","useEffect","seasonCover","COVERS","find","season","label","whichCover","loadCover","imageUrl","url","bgElement","querySelector","bgPosition","position","currentDay","calcBlogDay","homeCoverHeading","headingRef","initialWordAsArray","$heading","current","headingArray","map","a","sort","random","value","b","headingInterval","setInterval","char","shift","childNodes","childNode","setAttribute","length","clearInterval","homeCoverHeadingWordSwap","i","animate","index","words","timeout","setTimeout","innerHTML","word","opacity","clearTimeout","sessionStorage","setItem","HOME_COVER_HEAD_WORDS","delayBefore","split","coverLoading","headingAnimationDone","getItem","useRef","animationDelay","useHeadingAnimation","ref","letter","key","generateInitialWord","useState","post","frontmatter","title","image","backgroundImage","childImageSharp","resize","src","target","href","postList","postPlaceholders","Array","from","edges","node","classes","to","fields","slug","item","listQuery","IndexPage","data","allMarkdownRemark","preloaderImg","createElement","addEventListener","event","backgroundPosition","classList","remove"],"mappings":"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","file":"component---src-pages-index-js-bbcdf433929d54964a22.js","sourcesContent":["import React from \"react\"\nimport { CONTENT_BOOKMARK_ID } from \"../../../helpers/constants\"\n\nconst scrollToTargetAdjusted = () => {\n  var element = document.getElementById(CONTENT_BOOKMARK_ID)\n  var headerOffset = 75\n  var elementPosition = element.getBoundingClientRect().top\n  var offsetPosition = elementPosition - headerOffset\n\n  window.scrollTo({\n    top: offsetPosition,\n    behavior: \"smooth\",\n  })\n}\n\n/**\n * CoverNextButton\n */\nexport default () => {\n  return (\n    <div\n      className=\"m-landing__next t-absolute t-pointer\"\n      data-target=\"#anchor-content\"\n      id=\"fn-next\"\n      onClick={scrollToTargetAdjusted}\n    ></div>\n  )\n}\n","import React from \"react\"\nimport convertWordsToTime from \"../../helpers/convertWordsToTime\"\n\n/**\n * components/shared/postYearReadTime.jsx\n */\nexport default ({ postYear, wordCount }) => {\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <span>\n        Year <strong>{postYear}</strong>\n      </span>\n      <span\n        className=\"is-inline-block\"\n        style={{ fontSize: \"0.5em\", margin: \"0 0.5rem\" }}\n      >\n        <i class=\"far fa-clock\"></i>\n      </span>\n      <span>\n        <strong>{convertWordsToTime(wordCount)}</strong> min read\n      </span>\n    </div>\n  )\n}\n","/**\n * helpers/convertWordsToTime\n * convert number of words to approx reading time\n * based off: https://help.medium.com/hc/en-us/articles/214991667-Read-time\n * TL;DR 265 Words Per Minute\n */\nexport default noOfWords => {\n  return Math.round(noOfWords / 265)\n}\n","import React from \"react\"\n\n/**\n * LoadingBanner\n */\nexport default () => {\n  return (\n    <div className=\"m-landing__loading t-absolute t-align--mid-cen has-text-centered\">\n      <div className=\"is-inline-block\">\n        <i className=\"fas fa-circle-notch fa-spin fa-2x \"></i>\n      </div>\n      <div>Loading</div>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { COVERS } from \"../../../helpers/constants\"\nimport { calcBlogDay } from \"../../header/timer/useTimer\"\nimport loadCover from \"../shared/loadCover\"\n\n/**\n * covers/home/ImageCover\n */\nexport default ({ setCoverLoading }) => {\n  useCover(setCoverLoading)\n  return <div className=\"m-landing__cover cu-lazy t-opacity-0\"></div>\n}\n\nconst useCover = setCoverLoading =>\n  useEffect(() => {\n    const seasonCover = COVERS.find(season => season.label === whichCover())\n\n    loadCover({\n      imageUrl: seasonCover.url,\n      bgElement: document.querySelector(\".cu-lazy\"),\n      bgPosition: seasonCover.position,\n      setCoverLoading,\n    })\n  }, [setCoverLoading])\n\nconst whichCover = () => {\n  const currentDay = calcBlogDay()\n\n  switch (true) {\n    case currentDay < 60: // winter (jan, feb)\n    case currentDay > 334 && currentDay < 366: // winter (dec)\n      return \"winter\"\n    case currentDay > 59 && currentDay < 152: // spring (mar, april, may)\n      return \"spring\"\n    case currentDay > 151 && currentDay < 244: // summer (june, july, aug)\n      return \"summer\"\n    case currentDay > 243 && currentDay < 335: // autumn (sep, oct, nov)\n      return \"autumn\"\n  }\n}\n","import { useRef, useEffect } from \"react\"\nimport arrayShuffle from \"../../../../helpers/arrayShuffle\"\nimport { HOME_COVER_HEAD_WORDS } from \"../../../../helpers/constants\"\n\nconst homeCoverHeading = ({ headingRef, initialWordAsArray }) => {\n  const $heading = headingRef.current\n\n  // shuffle array\n  const headingArray = arrayShuffle(initialWordAsArray)\n\n  // first array letter show and remove from array\n  const headingInterval = setInterval(() => {\n    let char = headingArray.shift() // remove 1st array item from array & return it\n    char = char === \"#\" ? \"hash\" : char // change # to 'hash'\n\n    // find character and show\n    const headingCharNodesArray = [...$heading.childNodes]\n    headingCharNodesArray\n      .find(\n        childNode => childNode.className === `char char-hidden char-${char}`\n      )\n      .setAttribute(\"class\", `char char-${char}`)\n\n    if (headingArray.length === 0) {\n      clearInterval(headingInterval)\n      // on complete, (call function to) loop through words\n      homeCoverHeadingWordSwap($heading)\n    }\n  }, 300)\n}\n\n// home cover heading animation part 2\nconst homeCoverHeadingWordSwap = $heading => {\n  // object of words + duration to animate through\n  let i = 0\n  const animate = (index, words) => {\n    const timeout = setTimeout(function () {\n      // execute code\n      $heading.innerHTML = `<span class=\"char-hash\">#</span>${words[index].word}`\n      $heading.style.opacity = words[index].opacity\n\n      i++ // increment\n      // end of array, exit loop\n      if (i === words.length) {\n        clearTimeout(timeout)\n        sessionStorage.setItem(\"heading_animation_done\", true)\n        return\n      }\n\n      animate(i, HOME_COVER_HEAD_WORDS) // animate next word\n    }, words[index].delayBefore)\n  }\n\n  // loop\n  animate(i, HOME_COVER_HEAD_WORDS)\n}\n\n/**\n * useHeadingAnimation\n * 1000 is animation time of cover\n */\nexport default ({ initialWordAsArray, coverLoading, headingAnimationDone }) => {\n  const headingRef = useRef(null)\n  useEffect(() => {\n    const animationDelay = window.setTimeout(() => {\n      if (!coverLoading && !headingAnimationDone)\n        homeCoverHeading({ headingRef, initialWordAsArray })\n    }, 1000)\n\n    return () => clearTimeout(animationDelay)\n  }, [initialWordAsArray, coverLoading, headingAnimationDone])\n\n  return headingRef\n}\n","/**\n * arrayShuffle\n * in: array\n * out: shuffled array\n *\n * https://stackoverflow.com/a/46545530/512353\n */\nexport default unshuffled => {\n  return unshuffled\n    .map(a => ({ sort: Math.random(), value: a }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(a => a.value)\n}\n","import React from \"react\"\nimport generateInitialWord from \"./generateInitialWord\"\nimport useHeadingAnimation from \"./useHeadingAnimation\"\n\nconst initialWord = \"#lostwords\"\nconst initialWordAsArray = initialWord.split(\"\")\n\n/**\n * covers/home/heading/Heading\n */\nexport default ({ coverLoading }) => {\n  const headingAnimationDone = sessionStorage.getItem(\"heading_animation_done\")\n  const headingRef = useHeadingAnimation({\n    initialWordAsArray,\n    coverLoading,\n    headingAnimationDone,\n  })\n\n  return (\n    <div className=\"m-landing__heading t-absolute has-text-centered has-text-white t-align--mid\">\n      <span className=\"m-landing__h1-home f-h1 cu-text-shadow\" ref={headingRef}>\n        {generateInitialWord({ initialWordAsArray, headingAnimationDone })}\n      </span>\n    </div>\n  )\n}\n","import React, { Fragment } from \"react\"\n\n/**\n * generateInitialWord\n */\nexport default ({ initialWordAsArray, headingAnimationDone }) => {\n  return headingAnimationDone ? (\n    <Fragment>\n      <span className=\"char-hash\">#</span>forever\n    </Fragment>\n  ) : (\n    initialWordAsArray.map((letter, i) => {\n      return (\n        <span\n          key={i + letter}\n          className={`char char-hidden char-${\n            letter === \"#\" ? \"hash\" : letter\n          }`}\n        >\n          {letter}\n        </span>\n      )\n    })\n  )\n}\n","import React, { useState } from \"react\"\nimport ImageCover from \"./imageCover\"\nimport Loading from \"../shared/loading\"\nimport NextButton from \"../shared/nextButton\"\nimport Bottom from \"../shared/bottom\"\nimport Heading from \"./heading\"\n\nexport default () => {\n  const [coverLoading, setCoverLoading] = useState(true)\n\n  return (\n    <section className=\"m-landing no-overflow t-relative\">\n      <Loading />\n      <ImageCover setCoverLoading={setCoverLoading} />\n      <Heading coverLoading={coverLoading} />\n      <Bottom />\n      <NextButton />\n    </section>\n  )\n}\n","import React from \"react\"\n\nexport default () => {\n  return (\n    <section className=\"section is-sml\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column has-text-centered\" id=\"anchor-content\">\n            <h1 className=\"f-h1\">\n              Words to me, you; <span className=\"is-red-pale\">us</span>.\n            </h1>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n","import React from \"react\"\nimport PostYearReadTime from \"../../../shared/postYearReadTime\"\n\n/**\n * components/bodies/home/postFeed/mainPostBlock\n */\nexport default ({ post }) => {\n  const { title, image, postYear, wordCount } = post.frontmatter\n  return (\n    <div className=\"m-pfeed__post t-relative no-overflow\">\n      <div\n        className=\"m-pfeed__bg t-absolute\"\n        style={{\n          backgroundImage: `url(${image.childImageSharp.resize.src})`,\n        }}\n      ></div>\n      <div className=\"t-absolute m-pfeed__info\">\n        <h2 className=\"f-h2 has-text-white cu-text-shadow\">{title}</h2>\n        <div className=\"has-text-white m-pfeed__stats is-inline-block\">\n          <PostYearReadTime postYear={postYear} wordCount={wordCount} />\n        </div>\n        <div className=\"m-pfeed__read no-overflow\">\n          <div className=\"m-pfeed__read-spacer\">\n            <strong>\n              Read{\" \"}\n              <i className=\"fas fa-long-arrow-alt-right m-pfeed__arrow\"></i>\n            </strong>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport PostYearReadTime from \"../../../shared/postYearReadTime\"\n\n/**\n * components/bodies/home/postFeed/postBlock.jsx\n */\nexport default ({ post }) => {\n  const { title, image, postYear, wordCount } = post.frontmatter\n  return (\n    <div className=\"m-pfeed__post m-pfeed__post--sec t-relative no-overflow\">\n      <div\n        className=\"m-pfeed__bg t-absolute\"\n        style={{ backgroundImage: `url(${image.childImageSharp.resize.src})` }}\n      ></div>\n      <div className=\"t-absolute m-pfeed__info m-pfeed__info--sec\">\n        <h2 className=\"f-h3 has-text-white cu-text-shadow\">{title}</h2>\n        <div className=\"has-text-white m-pfeed__stats is-inline-block\">\n          <PostYearReadTime postYear={postYear} wordCount={wordCount} />\n        </div>\n        <div className=\"m-pfeed__read no-overflow\">\n          <div className=\"m-pfeed__read-spacer\">\n            <strong>\n              Read{\" \"}\n              <i className=\"fas fa-long-arrow-alt-right m-pfeed__arrow\"></i>\n            </strong>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\n/**\n * components/bodies/home/postFeed/postPlaceHolderBlock\n */\nexport default () => {\n  return (\n    <div className=\"column is-6\">\n      <a\n        target=\"_self\"\n        href=\"test\"\n        className=\"m-pfeed__post m-pfeed__post--sec is-block t-relative no-overflow t-cursor-def\"\n      >\n        <div\n          className=\"m-pfeed__bg t-absolute\"\n          style={{ backgroundImage: \"url(/images/post-placeholder.jpg)\" }}\n        ></div>\n        <div className=\"t-absolute m-pfeed__info m-pfeed__info--sec\">\n          <h2 className=\"f-h3 has-text-white cu-text-shadow\">#null</h2>\n          <span className=\"has-text-white m-pfeed__stats\">\n            ...words in transit\n          </span>\n        </div>\n      </a>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport classes from \"../../../../helpers/classesHandler\"\nimport MainPostBlock from \"./mainPostBlock\"\nimport PostBlock from \"./postBlock\"\nimport PostPlaceHolderBlock from \"./postPlaceHolderBlock\"\n\nexport default ({ postList }) => {\n  // console.log(\"postList\", postList)\n  const postPlaceholders = Array.from(Array(3 - postList.edges.length))\n\n  return (\n    <section className=\"section is-p0--top is-sml\">\n      <div className=\"container\">\n        <div className=\"columns is-multiline\">\n          {postList.edges.map(({ node }, i) => (\n            <div\n              key={`post-${i}`}\n              className={classes(\"column\", {\n                \"is-12\": i === 0,\n                \"is-6\": i > 0,\n              })}\n            >\n              <Link to={node.fields.slug} className=\"link\">\n                {i === 0 ? (\n                  <MainPostBlock post={node} />\n                ) : (\n                  <PostBlock post={node} />\n                )}\n              </Link>\n            </div>\n          ))}\n          {postPlaceholders.map((item, index) => (\n            <PostPlaceHolderBlock key={`post-placeholder-${index}`} />\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n","import React from \"react\"\nimport SEO from \"../components/seo\"\nimport { graphql } from \"gatsby\"\n// import Image from \"../components/Image\"\nimport \"../styles/styles.scss\"\nimport Layout from \"../components/layout\"\nimport Cover from \"../components/covers/home\"\nimport PostFeedHeading from \"../components/bodies/home/postFeedHeading\"\nimport PostFeed from \"../components/bodies/home/postFeed\"\n\nconst IndexPage = ({ data }) => {\n  const postList = data.allMarkdownRemark\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Cover />\n      <PostFeedHeading />\n      <PostFeed postList={postList} />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const listQuery = graphql`\n  query ListQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 250)\n          frontmatter {\n            title\n            postYear\n            image {\n              childImageSharp {\n                resize(width: 2000, quality: 75) {\n                  src\n                }\n              }\n            }\n            wordCount\n            tags\n            date(formatString: \"MMMM Do YYYY\")\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\n\n/**\n * CoverBottom\n */\nexport default () => {\n  return (\n    <div className=\"section is-p0 m-landing__bot t-absolute\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column has-text-white\">\n            <i className=\"fas fa-caret-down fa-3x\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/**\n * components/covers/shared/loadCover\n */\nexport default ({ imageUrl, bgElement, bgPosition, setCoverLoading }) => {\n  let preloaderImg = document.createElement(\"img\")\n  preloaderImg.src = imageUrl\n\n  return preloaderImg.addEventListener(\"load\", event => {\n    bgElement.style.backgroundImage = `url(${imageUrl})`\n    bgElement.style.backgroundPosition = bgPosition\n    setCoverLoading(false)\n    bgElement.classList.remove(\"t-opacity-0\")\n    preloaderImg = null\n  })\n}\n"],"sourceRoot":""}